name: Buf CI Pipeline1

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: write

jobs:
  lint-breaking:
    name: Buf Lint & Breaking
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Buf CLI
        uses: bufbuild/buf-setup-action@v1

      - name: Buf Lint
        run: buf lint

      - name: Buf Breaking
        run: buf breaking --against '.git#branch=main'

  generate:
    name: Buf Generate Code
    runs-on: ubuntu-latest
    needs: lint-breaking

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Buf CLI
        uses: bufbuild/buf-setup-action@v1

      - name: Generate Code
        run: make generate

      - name: Upload generated code
        uses: actions/upload-artifact@v4
        with:
          name: generated-code
          path: gen

  publish:
    name: Publish & Git Tag
    runs-on: ubuntu-latest
    needs: generate

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download generated code
        uses: actions/download-artifact@v4
        with:
          name: generated-code
          path: downloaded-gen

      - name: Merge downloaded generated code into gen/
        run: |
          mkdir -p gen
          cp -r downloaded-gen/* gen/

      - name: Set up Buf CLI
        uses: bufbuild/buf-setup-action@v1

      - name: Debug generated output
        run: |
          echo "=== gen/go ==="
          ls -R gen/go || echo "no go code"
          echo "=== gen/rust ==="
          ls -R gen/rust || echo "no rust code"
          echo "=== gen/ts ==="
          ls -R gen/ts || echo "no ts code"
          echo "=== gen/grpc-web ==="
          ls -R gen/grpc-web || echo "no grpc-web code"

      - name: Set up Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Bump version (patch)
        run: |
          version=$(git tag --sort=-v:refname | head -n 1 | sed 's/v//')
          IFS='.' read -r major minor patch <<< "${version:-0.1.0}"
          new_version="v$major.$minor.$((patch + 1))"
          echo "New version: $new_version"
          echo "$new_version" > VERSION
          echo "tag=$new_version" >> $GITHUB_ENV

      - name: Commit generated files and version
        run: |
          git add gen/ VERSION
          git commit -m "chore: buf generate & version ${{ env.tag }}" || echo "No commit needed"
          git push origin main
  
      - name: Create Git Tag
        run: |
          git tag -f ${{ env.tag }}
          git push origin --force ${{ env.tag }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.tag }}