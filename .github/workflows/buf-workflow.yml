name: Buf CI Pipeline

on:
  push:
    branches:
      - 'release/**'
  pull_request:

permissions:
  contents: write

jobs:
  lint-breaking:
    name: Buf Lint & Breaking
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Buf CLI
        uses: bufbuild/buf-setup-action@v1

      - name: Buf Lint
        run: buf lint

      - name: Buf Breaking
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          AUTHED_URL="https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/orjinfinity/suit-proto.git"
          buf breaking --against "$AUTHED_URL#branch=main"

  generate:
    name: Buf Generate Code
    runs-on: ubuntu-latest
    needs: lint-breaking

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Buf CLI
        uses: bufbuild/buf-setup-action@v1

      - name: Generate Code
        run: make generate

      - name: Upload generated code and dependencies
        uses: actions/upload-artifact@v4
        with:
          name: generated-code
          path: |
            gen/
            Cargo.toml
            go.mod
            go.sum

  publish:
    name: Publish & Git Tag
    runs-on: ubuntu-latest
    needs: generate

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download generated code
        uses: actions/download-artifact@v4
        with:
          name: generated-code
          path: downloaded-artifacts

      - name: Move files to correct locations
        run: |
          # Gen klasörünü taşı
          mkdir -p gen
          cp -r downloaded-artifacts/gen/* gen/
          
          # Kök dizin dosyalarını taşı
          cp downloaded-artifacts/Cargo.toml ./
          cp downloaded-artifacts/go.mod ./
          cp downloaded-artifacts/go.sum ./
          
          # Geçici dizini temizle
          rm -rf downloaded-artifacts

      - name: Set up Buf CLI
        uses: bufbuild/buf-setup-action@v1

      - name: Prepare Release Assets
        run: |
          # Zip oluştur
          zip -r generated-code.zip gen/ Cargo.toml go.mod go.sum VERSION
          
          # Debug için içeriği kontrol et
          echo "=== Zip içeriği ==="
          unzip -l generated-code.zip

      - name: Set up Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Extract tag from branch name
        run: |
          branch_name=${GITHUB_REF##*/}
          tag_name="v${branch_name#v}"
          echo "Detected tag: $tag_name"
          echo "$tag_name" > VERSION
          echo "tag=$tag_name" >> $GITHUB_ENV

      - name: Create Git Tag
        run: |
          git tag -f ${{ env.tag }}
          git push origin --force ${{ env.tag }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.tag }}
          files: |
            generated-code.zip
            Cargo.toml
            go.mod
            go.sum
            VERSION
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup
        run: |
          rm -f generated-code.zip