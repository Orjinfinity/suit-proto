// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct OrderItem {
    #[prost(string, tag="1")]
    pub product_id: ::prost::alloc::string::String,
    #[prost(int32, tag="2")]
    pub quantity: i32,
    #[prost(message, optional, tag="3")]
    pub unit_price: ::core::option::Option<super::super::common::v1::Money>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Order {
    #[prost(string, tag="1")]
    pub id: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub customer_id: ::prost::alloc::string::String,
    #[prost(string, tag="3")]
    pub table_id: ::prost::alloc::string::String,
    #[prost(message, repeated, tag="4")]
    pub items: ::prost::alloc::vec::Vec<OrderItem>,
    #[prost(message, optional, tag="5")]
    pub total: ::core::option::Option<super::super::common::v1::Money>,
    #[prost(string, tag="6")]
    pub status: ::prost::alloc::string::String,
    #[prost(int64, tag="7")]
    pub created_at: i64,
    #[prost(int64, tag="8")]
    pub updated_at: i64,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CreateOrderRequest {
    #[prost(message, optional, tag="1")]
    pub order: ::core::option::Option<Order>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CreateOrderResponse {
    #[prost(string, tag="1")]
    pub id: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetOrderRequest {
    #[prost(string, tag="1")]
    pub id: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetOrderResponse {
    #[prost(message, optional, tag="1")]
    pub order: ::core::option::Option<Order>,
}
include!("projectsuit.order.v1.tonic.rs");
// @@protoc_insertion_point(module)