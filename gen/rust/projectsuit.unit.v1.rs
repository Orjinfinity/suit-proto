// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Unit {
    #[prost(string, tag="1")]
    pub id: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub code: ::prost::alloc::string::String,
    #[prost(message, optional, tag="3")]
    pub name: ::core::option::Option<super::super::common::v1::Translation>,
    #[prost(string, tag="4")]
    pub base_unit_id: ::prost::alloc::string::String,
    #[prost(double, tag="5")]
    pub conversion_factor: f64,
    #[prost(bool, tag="6")]
    pub is_active: bool,
    #[prost(int64, tag="7")]
    pub created_at: i64,
    #[prost(int64, tag="8")]
    pub updated_at: i64,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UnitInput {
    #[prost(string, tag="1")]
    pub code: ::prost::alloc::string::String,
    #[prost(message, optional, tag="2")]
    pub name: ::core::option::Option<super::super::common::v1::Translation>,
    #[prost(string, tag="3")]
    pub base_unit_id: ::prost::alloc::string::String,
    #[prost(double, tag="4")]
    pub conversion_factor: f64,
    #[prost(bool, tag="5")]
    pub is_active: bool,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UnitView {
    #[prost(string, tag="1")]
    pub id: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub code: ::prost::alloc::string::String,
    #[prost(message, optional, tag="3")]
    pub name: ::core::option::Option<super::super::common::v1::Translation>,
    #[prost(string, tag="4")]
    pub base_unit_id: ::prost::alloc::string::String,
    #[prost(double, tag="5")]
    pub conversion_factor: f64,
    #[prost(bool, tag="6")]
    pub is_active: bool,
    #[prost(int64, tag="7")]
    pub created_at: i64,
    #[prost(int64, tag="8")]
    pub updated_at: i64,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CreateUnitRequest {
    #[prost(message, optional, tag="1")]
    pub unit: ::core::option::Option<UnitInput>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CreateUnitResponse {
    #[prost(string, tag="1")]
    pub id: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UpdateUnitRequest {
    #[prost(string, tag="1")]
    pub id: ::prost::alloc::string::String,
    #[prost(message, optional, tag="2")]
    pub unit: ::core::option::Option<UnitInput>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct UpdateUnitResponse {
    #[prost(bool, tag="1")]
    pub success: bool,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DeleteUnitRequest {
    #[prost(string, tag="1")]
    pub id: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct DeleteUnitResponse {
    #[prost(bool, tag="1")]
    pub success: bool,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetUnitRequest {
    #[prost(string, tag="1")]
    pub id: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetUnitResponse {
    #[prost(message, optional, tag="1")]
    pub unit: ::core::option::Option<UnitView>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ListUnitsRequest {
    #[prost(int32, tag="1")]
    pub page: i32,
    #[prost(int32, tag="2")]
    pub page_size: i32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ListUnitsResponse {
    #[prost(message, repeated, tag="1")]
    pub items: ::prost::alloc::vec::Vec<UnitView>,
    #[prost(int32, tag="2")]
    pub total: i32,
}
include!("projectsuit.unit.v1.tonic.rs");
// @@protoc_insertion_point(module)