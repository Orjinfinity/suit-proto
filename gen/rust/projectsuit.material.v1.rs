// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Material {
    #[prost(string, tag="1")]
    pub id: ::prost::alloc::string::String,
    #[prost(message, optional, tag="2")]
    pub name: ::core::option::Option<super::super::common::v1::Translation>,
    #[prost(string, tag="3")]
    pub unit: ::prost::alloc::string::String,
    #[prost(message, optional, tag="4")]
    pub cost: ::core::option::Option<super::super::common::v1::Money>,
    #[prost(bool, tag="5")]
    pub is_active: bool,
    #[prost(int64, tag="6")]
    pub created_at: i64,
    #[prost(int64, tag="7")]
    pub updated_at: i64,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MaterialInput {
    #[prost(message, optional, tag="1")]
    pub name: ::core::option::Option<super::super::common::v1::Translation>,
    #[prost(string, tag="2")]
    pub unit: ::prost::alloc::string::String,
    #[prost(message, optional, tag="3")]
    pub cost: ::core::option::Option<super::super::common::v1::Money>,
    #[prost(bool, tag="4")]
    pub is_active: bool,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MaterialView {
    #[prost(string, tag="1")]
    pub id: ::prost::alloc::string::String,
    #[prost(message, optional, tag="2")]
    pub name: ::core::option::Option<super::super::common::v1::Translation>,
    #[prost(string, tag="3")]
    pub unit: ::prost::alloc::string::String,
    #[prost(message, optional, tag="4")]
    pub cost: ::core::option::Option<super::super::common::v1::Money>,
    #[prost(bool, tag="5")]
    pub is_active: bool,
    #[prost(int64, tag="6")]
    pub created_at: i64,
    #[prost(int64, tag="7")]
    pub updated_at: i64,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CreateMaterialRequest {
    #[prost(message, optional, tag="1")]
    pub material: ::core::option::Option<MaterialInput>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CreateMaterialResponse {
    #[prost(string, tag="1")]
    pub id: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UpdateMaterialRequest {
    #[prost(string, tag="1")]
    pub id: ::prost::alloc::string::String,
    #[prost(message, optional, tag="2")]
    pub material: ::core::option::Option<MaterialInput>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct UpdateMaterialResponse {
    #[prost(bool, tag="1")]
    pub success: bool,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DeleteMaterialRequest {
    #[prost(string, tag="1")]
    pub id: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct DeleteMaterialResponse {
    #[prost(bool, tag="1")]
    pub success: bool,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetMaterialRequest {
    #[prost(string, tag="1")]
    pub id: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetMaterialResponse {
    #[prost(message, optional, tag="1")]
    pub material: ::core::option::Option<MaterialView>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ListMaterialsRequest {
    #[prost(int32, tag="1")]
    pub page: i32,
    #[prost(int32, tag="2")]
    pub page_size: i32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ListMaterialsResponse {
    #[prost(message, repeated, tag="1")]
    pub items: ::prost::alloc::vec::Vec<MaterialView>,
    #[prost(int32, tag="2")]
    pub total: i32,
}
include!("projectsuit.material.v1.tonic.rs");
// @@protoc_insertion_point(module)