// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: projectsuit/tax/v1/tax_common_v1.proto

package taxv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaxRate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Percentage    float64                `protobuf:"fixed64,3,opt,name=percentage,proto3" json:"percentage,omitempty"`
	IsActive      bool                   `protobuf:"varint,4,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaxRate) Reset() {
	*x = TaxRate{}
	mi := &file_projectsuit_tax_v1_tax_common_v1_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaxRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxRate) ProtoMessage() {}

func (x *TaxRate) ProtoReflect() protoreflect.Message {
	mi := &file_projectsuit_tax_v1_tax_common_v1_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxRate.ProtoReflect.Descriptor instead.
func (*TaxRate) Descriptor() ([]byte, []int) {
	return file_projectsuit_tax_v1_tax_common_v1_proto_rawDescGZIP(), []int{0}
}

func (x *TaxRate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaxRate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaxRate) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *TaxRate) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

var File_projectsuit_tax_v1_tax_common_v1_proto protoreflect.FileDescriptor

const file_projectsuit_tax_v1_tax_common_v1_proto_rawDesc = "" +
	"\n" +
	"&projectsuit/tax/v1/tax_common_v1.proto\x12\x12projectsuit.tax.v1\"j\n" +
	"\aTaxRate\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1e\n" +
	"\n" +
	"percentage\x18\x03 \x01(\x01R\n" +
	"percentage\x12\x1b\n" +
	"\tis_active\x18\x04 \x01(\bR\bisActiveB\xd7\x01\n" +
	"\x16com.projectsuit.tax.v1B\x10TaxCommonV1ProtoP\x01ZAgithub.com/orjinfinity/suit-proto/gen/go/projectsuit/tax/v1;taxv1\xa2\x02\x03PTX\xaa\x02\x12Projectsuit.Tax.V1\xca\x02\x12Projectsuit\\Tax\\V1\xe2\x02\x1eProjectsuit\\Tax\\V1\\GPBMetadata\xea\x02\x14Projectsuit::Tax::V1b\x06proto3"

var (
	file_projectsuit_tax_v1_tax_common_v1_proto_rawDescOnce sync.Once
	file_projectsuit_tax_v1_tax_common_v1_proto_rawDescData []byte
)

func file_projectsuit_tax_v1_tax_common_v1_proto_rawDescGZIP() []byte {
	file_projectsuit_tax_v1_tax_common_v1_proto_rawDescOnce.Do(func() {
		file_projectsuit_tax_v1_tax_common_v1_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_projectsuit_tax_v1_tax_common_v1_proto_rawDesc), len(file_projectsuit_tax_v1_tax_common_v1_proto_rawDesc)))
	})
	return file_projectsuit_tax_v1_tax_common_v1_proto_rawDescData
}

var file_projectsuit_tax_v1_tax_common_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_projectsuit_tax_v1_tax_common_v1_proto_goTypes = []any{
	(*TaxRate)(nil), // 0: projectsuit.tax.v1.TaxRate
}
var file_projectsuit_tax_v1_tax_common_v1_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_projectsuit_tax_v1_tax_common_v1_proto_init() }
func file_projectsuit_tax_v1_tax_common_v1_proto_init() {
	if File_projectsuit_tax_v1_tax_common_v1_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_projectsuit_tax_v1_tax_common_v1_proto_rawDesc), len(file_projectsuit_tax_v1_tax_common_v1_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_projectsuit_tax_v1_tax_common_v1_proto_goTypes,
		DependencyIndexes: file_projectsuit_tax_v1_tax_common_v1_proto_depIdxs,
		MessageInfos:      file_projectsuit_tax_v1_tax_common_v1_proto_msgTypes,
	}.Build()
	File_projectsuit_tax_v1_tax_common_v1_proto = out.File
	file_projectsuit_tax_v1_tax_common_v1_proto_goTypes = nil
	file_projectsuit_tax_v1_tax_common_v1_proto_depIdxs = nil
}
